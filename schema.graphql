type VaultFactory_AssetDeposited {
    id: ID!
    vaultAddress: String!
    orderId: String!
    chainId: Int!
}

type VaultFactory_CancelDeposit {
    id: ID!
    vaultAddress: String!
    orderId: String!
    chainId: Int!
}

type VaultFactory_OrderCancelled {
    id: ID!
    vaultAddress: String!
    orderId: String!
    chainId: Int!
}

type VaultFactory_OrderInventory {
    id: ID!
    platform: BigInt!
    platformAddress: String!
    parameter: BigInt!
    originChainId: BigInt!
    destinationChainId: BigInt!
    salt: BigInt!
    conditionValue: BigInt!
    vault: String!
    orderId: String!
    status: Int!
    depositToken: String
    convertToken: String
    solverTransaction: String
}

type VaultFactory_OrderCreated {
    id: ID!
    platform: BigInt!
    platformAddress: String!
    parameter: BigInt!
    destinationChainId: BigInt!
    salt: BigInt!
    conditionValue: BigInt!
    vault: String!
    orderId: String!
    chainId: Int!
}

type VaultFactory_OrderExecuted {
    id: ID!
    vaultAddress: String!
    orderId: String!
    chainId: Int!
}

type VaultFactory_UpdatedHandler {
    id: ID!
    newConditionEvaluator: String!
    oldConditionEvaluator: String!
}

type VaultFactory_UpdatedOwner {
    id: ID!
    oldOwner: String!
    newOwner: String!
}

type VaultFactory_VaultCreated {
    id: ID!
    vaultAddress: String!
    owner: String!
    chainId: Int!
}
